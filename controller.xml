<control>
<control path>
<pathname>fetchpath</pathname>
<state>
<statename>start</statename>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<mux RrtMux>X</mux>
</microinstruction>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>fetch</nextstatename>
</nextstate>
</state>
<state>
<statename>fetch</statename>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<reg PC></reg>
<mux PCmux>0</mux>
<reg IRdecode></reg>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<mux RrtMux>X</mux>
</microinstruction>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>fetch</nextstatename>
</nextstate>
</state>
</control path>
<control path>
<pathname>decodepath</pathname>
<state>
<statename>start</statename>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<mux RrtMux>X</mux>
</microinstruction>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>decode</nextstatename>
</nextstate>
</state>
<state>
<statename>decode</statename>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<reg immediate></reg>
<reg Rrt></reg>
<reg Rrs></reg>
<reg Rrd></reg>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRexec></reg>
<reg PCexec></reg>
<mux RrtMux>X</mux>
</microinstruction>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>decode</nextstatename>
</nextstate>
</state>
</control path>
<control path>
<pathname>executepath</pathname>
<state>
<statename>start</statename>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<mux RrtMux>X</mux>
</microinstruction>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>execute</nextstatename>
</nextstate>
</state>
<state>
<statename>execute</statename>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>2</input>
<input opcode4exec>X</input>
<input opcode2wb>3</input>
<input opcode4wb>X</input>
<input rtExec>0</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>0</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>1</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>0</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>3</input>
<input opcode4exec>X</input>
<input opcode2wb>2</input>
<input opcode4wb>X</input>
<input rtExec>0</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>0</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>2</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>0</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>2</input>
<input opcode4exec>X</input>
<input opcode2wb>3</input>
<input opcode4wb>X</input>
<input rtExec>1</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>1</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>1</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>0</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>3</input>
<input opcode4exec>X</input>
<input opcode2wb>2</input>
<input opcode4wb>X</input>
<input rtExec>1</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>1</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>2</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>0</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>2</input>
<input opcode4exec>X</input>
<input opcode2wb>3</input>
<input opcode4wb>X</input>
<input rtExec>2</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>2</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>1</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>0</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>3</input>
<input opcode4exec>X</input>
<input opcode2wb>2</input>
<input opcode4wb>X</input>
<input rtExec>2</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>2</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>2</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>0</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>2</input>
<input opcode4exec>X</input>
<input opcode2wb>3</input>
<input opcode4wb>X</input>
<input rtExec>3</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>3</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>1</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>0</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>3</input>
<input opcode4exec>X</input>
<input opcode2wb>2</input>
<input opcode4wb>X</input>
<input rtExec>0</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>3</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>2</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>0</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>2</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>1</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>1</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>3</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>2</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>1</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>0</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>+</alu>
<mux resultmux>0</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>1</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>1</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>-</alu>
<mux resultmux>0</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>1</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>2</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>3</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>1</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>3</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<reg Rrs></reg>
<reg Rrd></reg>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<reg dataMemory></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>1</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>5</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<reg Rrs></reg>
<reg Rrd></reg>
<alu ALU86>X</alu>
<mux resultmux>4</mux>
<reg result></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>1</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<reg lessequalzero></reg>
<mux wbRdOrRt>X</mux>
<mux wbReg>X</mux>
<reg IRwb></reg>
<mux RrtMux>1</mux>
</microinstruction>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>execute</nextstatename>
</nextstate>
</state>
</control path>
<control path>
<pathname>wbpath</pathname>
<state>
<statename>start</statename>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>0</mux>
<mux RrtMux>X</mux>
</microinstruction>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>writeback</nextstatename>
</nextstate>
</state>
<state>
<statename>writeback</statename>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>6</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>0</mux>
<mux RrtMux>X</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>7</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>0</mux>
<mux RrtMux>X</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>3</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>0</mux>
<mux RrtMux>X</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>0</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>0</mux>
<mux wbReg>1</mux>
<mux RrtMux>X</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>1</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>0</mux>
<mux wbReg>1</mux>
<mux RrtMux>X</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>2</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>0</mux>
<mux wbReg>1</mux>
<mux RrtMux>X</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>1</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>4</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>1</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>0</mux>
<mux RrtMux>X</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>5</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>1</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>1</mux>
<mux wbReg>1</mux>
<mux RrtMux>X</mux>
</microinstruction>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>1</mux>
<mux wbReg>1</mux>
<mux RrtMux>X</mux>
</microinstruction>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>7</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>halt</nextstatename>
</nextstate>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>writeback</nextstatename>
</nextstate>
</state>
<state>
<statename>halt</statename>
<microinstruction>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<mux PCmux>X</mux>
<alu ALU86>X</alu>
<mux resultmux>X</mux>
<mux wbRdOrRt>X</mux>
<mux wbReg>0</mux>
<mux RrtMux>X</mux>
</microinstruction>
<nextstate>
<input rs>X</input>
<input rt>X</input>
<input rd>X</input>
<input opcode4>X</input>
<input opcode2>X</input>
<input doJump>X</input>
<input opcode2exec>X</input>
<input opcode4exec>X</input>
<input opcode2wb>X</input>
<input opcode4wb>X</input>
<input rtExec>X</input>
<input rdExec>X</input>
<input rsExec>X</input>
<input rtWb>X</input>
<input rdWb>X</input>
<input rsWb>X</input>
<nextstatename>halt</nextstatename>
</nextstate>
</state>
</control path>
</control>

